{"version":3,"sources":["../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/AddLineState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/backend.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/BaseState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/events/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/events/EventManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/FinalState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/find_ways.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/frameSwitcher/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/frameSwitcher/FrameSwitcher.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/freespins.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/gameEvents/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/gameEvents/GameEvents.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/GameModel.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/GameSettings.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/GameStateMachine.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/GlobalEventManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/IdleState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/InitState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/LuckyMoneyState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/NetworkManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/nodeSwitcher/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/nodeSwitcher/NodeSwitcher.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/objectPool/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/objectPool/ObjectPool.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/reel/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/reel/ReelController.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/reel/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/reel/ReelMaskComponent.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/reels.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/ReelsManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/ReelsSettings.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/ResetLinesState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/Responses.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/ShowWaysState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/SlotGameManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/spin.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/SpinState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/StartFreespinsState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/components/freespinsWindow/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/components/freespinsWindow/StartFreespinsWindow.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/StateMachine.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/state-machine/StateMachineEvents.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/StatesEnum.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/StopFreespinsState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/components/freespinsWindow/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/components/freespinsWindow/StopFreespinsWindow.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/gameStates/states/StopState.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/symbol/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/symbol/SymbolController.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/settings/SymbolsSettings.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/model/Types.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/managers/UIManager.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/ult/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/ult/Utils.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/file:/Users/artemfedorov/Documents/dev/slot/assets/scripts/fake_backend/utl.ts","../file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/modal/scripts/file:/Users/artemfedorov/Documents/dev/slot/assets/prefabs/modal/scripts/WindowComponent.ts"],"names":["_BaseState","AddLineState","_this","_len","arguments","length","args","Array","_key","call","apply","concat","end","nextState","GameStates","FINAL","setTimeout","stateMachine","setState","_inheritsLoose","_proto","prototype","begin","addLines","GlobalEventManager","getInstance","once","GameEvents","ADD_LINE_COMPLETE","this","emit","ADD_LINE_START","cleanUp","BaseState","_RF","pop","backend","size","reels","currentSize","keysLeft","freespins","generateReels","i","push","generateReel","spin","symbols","getSubsequence","data","ways","findPathForNumber","res","specials","keys","findSymbolPositions","fs","lm","bg","add","j","add_lines","is_reset","left","total","total_won","console","log","id","model","EventManager","eventName","callback","eventListeners","addOnce","remove","listeners","index","indexOf","splice","dispatch","_step","_iterator","_createForOfIteratorHelperLoose","done","value","FinalState","IDLE","nextStateData","stateQueue","stateData","shift","state","paths","ddd","colIndex","prevIndex","currentPath","symbol","path","positions","map","v","idx","Math","abs","filter","pos","ccclass","_decorator","property","executeInEditMode","_dec","_dec2","SpriteFrame","_dec3","type","CCInteger","tooltip","step","_class","_descriptor","_applyDecoratedDescriptor","_class2","_Sprite","FrameSwitcher","_initializerDefineProperty","_assertThisInitialized","_descriptor2","sprite","start","getComponent","Sprite","updateImage","update","dt","frames","spriteFrame","currentFrameIndex","configurable","enumerable","writable","initializer","probability","rows","random","selectedReel","floor","selectedRow","SpecialSymbolType","_Component","GameModel","spinData","isAutoplay","fsLeft","_freespins","_gameStateModel","currentStateIndex","GameStateMachine","INIT","storeSpinData","SHOW_WAYS","RESET_LINES","START_FREESPINS","STOP_FREESPINS","ADD_LINE","luckyMoneySymbols","checkForSpecialSymbols","money","LUCKY_MONEY","sort","a","b","_GameStatesPriority$a","_GameStatesPriority$b","GameStatesPriority","Number","MAX_VALUE","_createClass","key","get","set","Boolean","Component","is_debug","min_symbols_amount_for_freespins","_StateMachine","stateEnum","init","addState","InitState","IdleState","SpinState","SPIN","StopState","STOP","ShowWaysState","LuckyMoneyState","ResetLinesState","StartFreespinsState","StopFreespinsState","StateMachine","instance","EventTarget","IDLE_START","off","INIT_COMPLETE","INIT_REQUEST","LUCKY_MONEY_COMPLETE","LUCKY_MONEY_START","NetworkManager","responseIndex","onLoad","on","bind","SPIN_REQUEST","ReelsSettings","defaultSymbolsInReel","sendResult","INIT_RESPONSE","SPIN_RESPONSE","event","Node","NodeSwitcher","_currentNodeIndex","nodes","onEditorPropsChanged","getCurrentNode","currentNodeIndex","forEach","node","active","error","Object","getOwnPropertyDescriptor","Prefab","ObjectPool","pool","preload","count","obj","instantiate","objectPrefab","getObject","releaseObject","removeFromParent","clear","destroy","getSize","_dec4","ReelMaskComponent","_dec5","_dec6","_dec7","ReelController","_descriptor3","_descriptor4","_descriptor5","_descriptor6","isSpinning","symbolHeight","currentScale","totalReelHeight","stopCounter","bottomLine","bottomSymbolY","bottomSymbol","toReset","stopReelData","clearDefaultSymbols","symbolsContainer","children","visibleSymbols","scales","calculateTotalReelHeight","symbolsWithPadding","initializedSymbols","createSymbols","addInitSymbolsToContainer","getBottomSymbol","calculateBottomLine","center","mask","setMask","getPosition","y","symbolCount","_this2","addChild","moveSymbolToBottom","setVisibleSymbolsAmount","amount","highlight","SymbolController","hightlight","startSpin","position","stopSpin","symbolsWithExtra","stopSymbols","addStopSymbolsOnTop","finishAnimation","unshift","createSymbol","objectPool","changeSymbol","changeSize","_this3","moveSymbolOnTop","_this4","dy","tween","to","Vec3","x","z","easing","onFinishSymbolTween","removeExtraSymbols","isReset","counter","spinAnimation","setPosition","spinSpeed","bottomChecking","topSymbol","extend","extend_duration","animateMask","reset","_this5","reset_duration","_lastSymbol$position","lastSymbol","_this6","currentY","duration","targetY","targetPosition","topSymbolY","top","bottom","startValues","topY","bottomY","height","targetValues","onUpdate","ReelsManager","spinningReelsCount","SPIN_START","SPIN_STOP","onAddLine","RESET_LINES_START","onResetLines","SHOW_WAYS_START","onShowWays","onShowLuckyMoney","onReelStopped","reelController","_loop","default_delay_between_reels","SPIN_COMPLETE","newLinesAmount","SHOW_WAYS_COMPLETE","RESET_LINES_COMPLETE","onDestroy","1","2","3","4","5","6","7","8","responses","winnings","is_respin","name","getUniquePositions","UIManager","SlotGameManager","balance","betAmount","reel","REEL_LENGTH","getRandomSymbol","sequence","subsequence","symbolWeights","0","9","weights","values","totalWeight","reduce","sum","w","rand","FREESPINS_SHOW_COMPLETE","START_FREESPINS_SHOW","Button","_WindowComponent","StartFreespinsWindow","onShow","hide","show","headerLabel","string","bodyText","String","onStartBtnClick","WindowComponent","currentState","idsMap","statesMap","currentStateName","statesEnum","Map","StatesEnum","stateId","getStateId","has","Error","stateChanged","mylog","StateMachineEvents","STATE_CHANGED","START_BONUS","STOP_BONUS","STOP_FREESPINS_SHOW_COMPLETE","STOP_FREESPINS_SHOW","StopFreespinsWindow","scale","time","back","union","Label","_dec8","_descriptor7","currentBet","maxBet","minBet","spinButton","onSpinButtonClicked","stopButton","onStopButtonClicked","increaseBetButton","onIncreaseBetClicked","decreaseBetButton","onDecreaseBetClicked","updateBetDisplay","winMessageLabel","updateBalanceDisplay","balanceLabel","bet","betLabel","showWinMessage","scheduleOnce","symbolType","_spinData$specials","waysData","uniquePositions","Set","result","way","GameSettings","targetSymbol","SymbolsSettings","manualStart"],"mappings":"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","file":"all.js","sourcesContent":["import { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class AddLineState extends BaseState {\n\n  begin(addLines: number) {\n    GlobalEventManager.getInstance().once(GameEvents.ADD_LINE_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.ADD_LINE_START, addLines);\n  }\n\n  end = (): void => {\n    let nextState: string = GameStates.FINAL;\n\n\n    setTimeout(() => {\n      this.stateMachine.setState(nextState);\n    }, 500);\n  }\n\n  cleanUp(): void {\n  }\n}","import { FreespinsData, SpinData } from 'scripts/model/Types';\nimport { findPathForNumber } from './find_ways';\nimport reels from './reels';\nimport { generateReel } from './spin';\nimport { findSymbolPositions, getSubsequence } from './utl';\n\nconst TOTAL_REELS = 6;\n\nexport class backend {\n    reels: number[][] = null;\n\n    currentSize: number = 0;\n\n    keysLeft = 0;\n\n    freespins: FreespinsData = null;\n\n    constructor(size: number) {\n        this.currentSize = size;\n        this.generateReels();\n    }\n\n    generateReels() {\n        this.reels = [];\n        for (let i = 0; i < TOTAL_REELS; i++) {\n            this.reels.push(generateReel());\n        }\n    }\n\n    spin(): SpinData {\n        const symbols: number[][] = [];\n\n        for (let i = 0; i < TOTAL_REELS; i++) {\n            symbols.push(getSubsequence(reels.data[i], this.currentSize));\n        }\n\n        const ways = findPathForNumber(symbols);\n\n        const res: SpinData = {\n            symbols: symbols\n        };\n\n        if (ways.length > 0) {\n            res['ways'] = {\n                ways: ways\n            }\n\n            //if (!this.freespins) res.is_respin = true;\n        }\n\n        let specials = [];\n\n        const keys = findSymbolPositions(symbols, 8);\n        const fs = findSymbolPositions(symbols, 7);\n        const lm = findSymbolPositions(symbols, 6);\n        const bg = findSymbolPositions(symbols, 5);\n\n        if (keys.length > 0) {\n            specials = [...keys, ...specials];\n\n            if (!this.freespins) this.keysLeft = 3;\n\n            let add = keys.length;\n\n            if (this.currentSize + keys.length > 6 && !this.freespins) {\n                add = 6 - this.currentSize;\n            }\n\n            if (!this.freespins) {\n                for (let i = 0; i < symbols.length; i++) {\n                    for (let j = 0; j < add; j++) {\n                        symbols[i].push(j);\n                    }\n                }\n            }\n\n            this.currentSize = symbols[0].length;\n\n            if (add > 0 && !this.freespins) {\n                res.add_lines = add;\n            }\n        } else {\n            if (this.keysLeft > 0 && !this.freespins) {\n                this.keysLeft--;\n                if (this.keysLeft === 0) {\n                    this.currentSize = 3;\n                    res.is_reset = true;\n                }\n            }\n        }\n\n        if (fs.length > 0) {\n            specials = [...fs, ...specials];\n        }\n\n        if (this.freespins) {\n            if (this.freespins.left > 0) {\n                this.freespins.left--;\n            } else {\n                this.freespins = null;\n            }\n\n        }\n\n        if (fs.length > 2) {\n            if (this.freespins) {\n                //this.freespins.total += 5;\n                //this.freespins.left += 5;\n            } else {\n                this.freespins = {\n                    total: 5,\n                    left: 5,\n                    total_won: 0\n                }\n            }\n        }\n\n        if (this.freespins) {\n            res.freespins = this.freespins;\n            if (this.freespins.left === 0) {\n                res.is_reset = true;\n                this.currentSize = 3;\n            }\n        }\n\n\n        if (lm.length > 0) specials = [...lm, ...specials];\n        if (bg.length > 0) specials = [...bg, ...specials];\n\n        if (specials.length > 0) {\n            res.specials = specials;\n        }\n\n        console.log('spin response: ', res);\n\n        return res;\n    }\n\n\n\n\n\n\n}\n\n","import { StateMachine } from \"./StateMachine\";\n\nexport abstract class BaseState {\n  stateMachine: StateMachine;\n  model: any;\n  id: string;\n\n  constructor(stateMachine: StateMachine, id: string, model: any) {\n    this.stateMachine = stateMachine;\n    this.model = model;\n    this.id = id;\n  }\n\n  begin(data?: any) { }\n\n  end = (data?: any) => { };\n\n  cleanUp() { }\n}\n","type EventCallback = (...args: any[]) => void;\n\nexport default class EventManager {\n    private static eventListeners: { [key: string]: EventCallback[] } = {};\n\n    private constructor() {}\n\n    public static add(eventName: string, callback: EventCallback): void {\n        if (!EventManager.eventListeners[eventName]) {\n            EventManager.eventListeners[eventName] = [];\n        }\n        EventManager.eventListeners[eventName].push(callback);\n    }\n\n    public static addOnce(eventName: string, callback: EventCallback): void {\n        EventManager.remove(eventName, callback);\n        EventManager.add(eventName, callback);\n    }\n\n    public static remove(eventName: string, callback: EventCallback): void {\n        const listeners = EventManager.eventListeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        \n        const index = listeners.indexOf(callback);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    public static dispatch(eventName: string, ...args: any[]): void {\n        const listeners = EventManager.eventListeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        for (const callback of listeners) {\n            callback(...args);\n        }\n    }\n}","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class FinalState extends BaseState {\n\n  begin() {\n    let nextState: string = GameStates.IDLE;\n    let nextStateData: any = null;\n\n    if (this.model.stateQueue.length > 0) {\n      const stateData = this.model.stateQueue.shift();\n      nextState = stateData.state;\n      nextStateData = stateData.data;\n    }\n\n    this.stateMachine.setState(nextState, nextStateData);\n  }\n\n  cleanUp(): void {\n  }\n}","const WILD = 9;\n\nexport function findPathForNumber(reels: number[][]) {\n    const paths: { symbol: number, path: number[] }[] = [];\n\n    function ddd(colIndex: number, prevIndex: number, currentPath: number[], value: number) {\n        if (colIndex >= reels.length) {\n            paths.push({ symbol: reels[0][currentPath[0]], path: [...currentPath] });\n            return;\n        }\n\n        // Получаем все возможные соседние индексы для текущего значения или для \"9\" (wildcard)\n        const positions = reels[colIndex]\n            .map((v, idx) => ((v === value || v === WILD) && Math.abs(idx - prevIndex) <= 1 ? idx : -1))\n            .filter(idx => idx !== -1);\n\n        if (positions.length > 0) {\n            for (const pos of positions) {\n                ddd(colIndex + 1, pos, [...currentPath, pos], reels[colIndex][pos] === WILD ? value : reels[colIndex][pos]);\n            }\n        } else if (currentPath.length > 2) {\n            // Фиксируем найденный путь, если он достаточно длинный\n            paths.push({ symbol: value, path: [...currentPath] });\n        }\n    }\n\n    for (let j = 0; j < reels[0].length; j++) {\n        ddd(1, j, [j], reels[0][j]);\n    }\n\n    return paths;\n}\n","import { _decorator, CCInteger, Component, Sprite, SpriteFrame, UITransform } from 'cc';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('FrameSwitcher')\n@executeInEditMode\nexport class FrameSwitcher extends Sprite {\n\n    @property([SpriteFrame])\n    frames: SpriteFrame[] = [];\n\n    @property({\n        type: CCInteger,\n        tooltip: \"Index of the frame to display\",\n        step: 1,\n    })\n    currentFrameIndex: number;\n\n    private sprite: Sprite = null;\n\n    start() {\n        this.sprite = this.getComponent(Sprite);\n        this.updateImage();\n    }\n\n    protected update(dt: number): void {\n        this.updateImage();\n    }\n\n    updateImage() {\n        if (this.frames.length > 0 && this.sprite) {\n            this.sprite.spriteFrame = this.frames[this.currentFrameIndex];\n        }\n    }\n}\n","import { SpecialSymbolData, SpecialSymbolType } from \"scripts/model/Types\";\n\nexport function generateFreeSpins(probability: number, reels: number, rows: number): SpecialSymbolData[] {\n    if (Math.random() >= probability) {\n        return [];\n    }\n    const selectedReel = Math.floor(Math.random() * reels);\n    const selectedRow = Math.floor(Math.random() * rows);\n    return [{ i: selectedReel, j: selectedRow, type: SpecialSymbolType.freespins }];\n}\n\n","export enum GameEvents {\n    INIT_REQUEST = 'INIT_REQUEST',\n    INIT_RESPONSE = 'INIT_RESPONSE',\n\n    INIT_COMPLETE = 'INIT_COMPLETE',\n\n    IDLE_START = 'IDLE_START',\n\n    SPIN_REQUEST = 'SPIN_REQUEST',\n    SPIN_RESPONSE = 'SPIN_RESPONSE',\n\n    SPIN_START = 'SPIN_START',\n\n    SPIN_STOP = 'SPIN_STOP',\n    SPIN_COMPLETE = 'SPIN_COMPLETE',\n\n    SHOW_WAYS_START = 'SHOW_WAYS_START',\n    SHOW_WAYS_COMPLETE = 'SHOW_WAYS_COMPLETE',\n\n    LUCKY_MONEY_START = 'LUCKY_MONEY_START',\n    LUCKY_MONEY_COMPLETE = 'LUCKY_MONEY_COMPLETE',\n\n    ADD_LINE_START = 'ADD_LINE_START',\n    ADD_LINE_COMPLETE = 'ADD_LINE_COMPLETE',\n\n    RESET_LINES_START = 'RESET_LINES_START',\n    RESET_LINES_COMPLETE = 'RESET_LINES_COMPLETE',\n\n    START_FREESPINS_SHOW = 'START_FREESPINS_SHOW',\n    FREESPINS_SHOW_COMPLETE = 'FREESPINS_SHOW_COMPLETE',\n\n    STOP_FREESPINS_SHOW = 'STOP_FREESPINS_SHOW',\n    STOP_FREESPINS_SHOW_COMPLETE = 'STOP_FREESPINS_SHOW_COMPLETE',\n}","import { _decorator, Component, log } from 'cc';\nimport { GameStateMachine } from './gameStates/GameStateMachine';\nimport { GameStates, GameStatesPriority } from './gameStates/StatesEnum';\nimport { FreespinsData, SpecialSymbolType, SpinData } from './Types';\nimport { checkForSpecialSymbols } from 'scripts/ult/Utils';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameModel')\nexport class GameModel extends Component {\n\n\n    public spinData: SpinData = null;\n    public stateQueue: { state: GameStates; data: any }[] = [];\n    public isAutoplay: boolean = false;\n    public fsLeft: number;\n\n    private _freespins: FreespinsData = null;\n    private _gameStateModel: GameStateMachine = null;\n\n    private currentStateIndex: number = 0;\n\n\n    start() {\n        this._gameStateModel = new GameStateMachine(this, GameStates);\n        this._gameStateModel.setState(GameStates.INIT)\n\n        this.stateQueue = [];\n    }\n\n    public storeSpinData(data: SpinData): void {\n        this.spinData = data;\n        this.currentStateIndex = 0;\n\n        this.freespins = this.spinData.freespins;\n\n        this.stateQueue.length = 0;\n\n        if (data.ways) {\n            this.stateQueue.push({ state: GameStates.SHOW_WAYS, data: data.ways });\n        }\n\n        if (data.is_reset) {\n            this.stateQueue.push({ state: GameStates.RESET_LINES, data: null });\n        }\n\n        if (data.freespins && data.freespins.total === data.freespins.left) {\n            this.stateQueue.push({ state: GameStates.START_FREESPINS, data: data.freespins });\n        }\n\n        if (data.freespins && data.freespins.left === 0) {\n            this.stateQueue.push({ state: GameStates.STOP_FREESPINS, data: data.freespins });\n        }\n\n        if (data.add_lines) {\n            this.stateQueue.push({ state: GameStates.ADD_LINE, data: data.add_lines });\n        }\n\n        const luckyMoneySymbols = checkForSpecialSymbols(data, SpecialSymbolType.money);\n        if (luckyMoneySymbols && luckyMoneySymbols.length > 0) {\n            this.stateQueue.push({ state: GameStates.LUCKY_MONEY, data: luckyMoneySymbols });\n        }\n\n        this.stateQueue.sort((a, b) => {\n            const priorityA = GameStatesPriority[a.state] ?? Number.MAX_VALUE;\n            const priorityB = GameStatesPriority[b.state] ?? Number.MAX_VALUE;\n            return priorityA - priorityB;\n        });\n\n        log('stateQueue', this.stateQueue);\n    }\n\n\n\n    set freespins(data: FreespinsData) {\n        this._freespins = data;\n        this.fsLeft = this.freespins ? this.freespins.left : 0;\n        this.isAutoplay = Boolean(this.fsLeft);\n    }\n\n    get freespins(): FreespinsData {\n        return this._freespins;\n    }\n}\n\n","export default {\n    is_debug: true,\n    min_symbols_amount_for_freespins: 3,\n}","import { IStateMachine } from \"scripts/state-machine/IStateMachine\";\nimport { StateMachine } from \"scripts/state-machine/StateMachine\";\nimport { AddLineState } from \"./states/AddLineState\";\nimport { FinalState } from \"./states/FinalState\";\nimport { IdleState } from \"./states/IdleState\";\nimport { InitState } from \"./states/InitState\";\nimport { LuckyMoneyState } from \"./states/LuckyMoneyState\";\nimport { ResetLinesState } from \"./states/ResetLinesState\";\nimport { ShowWaysState } from \"./states/ShowWaysState\";\nimport { SpinState } from \"./states/SpinState\";\nimport { StartFreespinsState } from \"./states/StartFreespinsState\";\nimport { StopFreespinsState } from \"./states/StopFreespinsState\";\nimport { StopState } from \"./states/StopState\";\n\nexport class GameStateMachine extends StateMachine implements IStateMachine {\n\n  constructor(model: any, stateEnum: any) {\n    super(model, stateEnum);\n  }\n\n  init(stateEnum: any): void {\n    super.init(stateEnum);\n\n    this.addState(InitState, stateEnum.INIT);\n    this.addState(IdleState, stateEnum.IDLE);\n    this.addState(SpinState, stateEnum.SPIN);\n    this.addState(StopState, stateEnum.STOP);\n    this.addState(ShowWaysState, stateEnum.SHOW_WAYS);\n    this.addState(LuckyMoneyState, stateEnum.LUCKY_MONEY);\n    this.addState(AddLineState, stateEnum.ADD_LINE);\n    this.addState(ResetLinesState, stateEnum.RESET_LINES);\n    this.addState(StartFreespinsState, stateEnum.START_FREESPINS);\n    this.addState(StopFreespinsState, stateEnum.STOP_FREESPINS);\n    this.addState(FinalState, stateEnum.FINAL);\n  }\n}","import { EventTarget } from 'cc';\n\nclass GlobalEventManager {\n    private static instance: EventTarget;\n\n    private constructor() { }\n\n    public static getInstance(): EventTarget {\n        if (!GlobalEventManager.instance) {\n            GlobalEventManager.instance = new EventTarget();\n        }\n        return GlobalEventManager.instance;\n    }\n}\n\nexport default GlobalEventManager;\n","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { GameStates } from \"../StatesEnum\";\nimport { GameEvents } from \"scripts/gameEvents/GameEvents\";\n\nexport class IdleState extends BaseState {\n\n  begin(data?: any) {\n    GlobalEventManager.getInstance().emit(GameEvents.IDLE_START);\n\n    if (this.model.isAutoplay) {\n      this.end();\n    } else {\n      GlobalEventManager.getInstance().once('spinPressed', this.end, this);\n    }\n  }\n\n  end = (): void => {\n    this.stateMachine.setState(GameStates.SPIN);\n  }\n\n  cleanUp(): void {\n    GlobalEventManager.getInstance().off('spinPressed', this.end, this);\n  }\n}","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport { InitData } from \"scripts/model/Types\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class InitState extends BaseState {\n\n  begin(data?: any) {\n    GlobalEventManager.getInstance().once(GameEvents.INIT_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.INIT_REQUEST);\n  }\n\n  end = (data: InitData): void => {\n    this.stateMachine.setState(GameStates.IDLE);\n  }\n\n  cleanUp(): void {\n    GlobalEventManager.getInstance().off(GameEvents.INIT_COMPLETE, this.end);\n  }\n}","import { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { SpecialSymbolData } from \"scripts/model/Types\";\nimport { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class LuckyMoneyState extends BaseState {\n\n  begin(data: SpecialSymbolData[]) {\n    GlobalEventManager.getInstance().once(GameEvents.LUCKY_MONEY_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.LUCKY_MONEY_START, data);\n  }\n\n  end = (): void => {\n    let nextState: string = GameStates.FINAL;\n    this.stateMachine.setState(nextState);\n  }\n\n  cleanUp(): void {\n  }\n}","import { _decorator, Component } from 'cc';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nimport { backend } from 'scripts/fake_backend/backend';\nimport { GameEvents } from 'scripts/gameEvents/GameEvents';\nimport { InitData, SpinData } from 'scripts/model/Types';\nimport ReelsSettings from 'scripts/settings/ReelsSettings';\nimport { mylog } from 'scripts/ult/Utils';\nconst { ccclass, property } = _decorator;\n\n@ccclass('NetworkManager')\nexport class NetworkManager extends Component {\n\n    private responseIndex: number = 0;\n\n    private backend: backend;\n\n    protected onLoad(): void {\n        GlobalEventManager.getInstance().on(GameEvents.INIT_REQUEST, this.init.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.SPIN_REQUEST, this.spin.bind(this));\n\n    }\n\n    public init(): void {\n        this.backend = new backend(ReelsSettings.defaultSymbolsInReel);\n\n        const data: InitData = {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ]\n        }\n        this.sendResult(GameEvents.INIT_RESPONSE, data)\n    }\n\n    public spin(): void {\n        const data: SpinData = this.backend.spin();\n        this.sendResult(GameEvents.SPIN_RESPONSE, data);\n    }\n\n    private sendResult(event: string, data: any): void {\n        GlobalEventManager.getInstance().emit(event, data);\n    }\n}\n\n","import { _decorator, CCInteger, Component, Node } from 'cc';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('NodeSwitcher')\n@executeInEditMode\nexport class NodeSwitcher extends Component {\n\n    @property([Node])\n    nodes: Node[] = [];\n\n    @property({\n        type: CCInteger,\n        tooltip: \"Index of the node to display\",\n        step: 1,\n    })\n\n    get currentNodeIndex() {\n        return this._currentNodeIndex;\n    }\n\n    protected onLoad(): void {\n        if (this.nodes.length > 0) {\n            this.onEditorPropsChanged();\n        }\n    }\n\n    set currentNodeIndex(value: number) {\n        if (value >= 0 && value < this.nodes.length) {\n            this._currentNodeIndex = value;\n            this.onEditorPropsChanged();\n        } else {\n            console.error('Invalid node index:', value);\n        }\n    }\n\n    public getCurrentNode(): Node {\n        return this.nodes[this.currentNodeIndex];\n    }\n\n    private _currentNodeIndex: number = 0;\n\n\n    private onEditorPropsChanged() {\n        this.nodes.forEach((node) => {\n            node.active = false;\n        })\n        this.getCurrentNode().active = true;\n    }\n}\n\n","import { _decorator, Component, Prefab, instantiate, Node } from 'cc';\nimport { mylog } from 'scripts/ult/Utils';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ObjectPool')\nexport class ObjectPool extends Component {\n    @property({ type: Prefab })\n    objectPrefab: Prefab = null;\n\n    private pool: Node[] = [];\n\n    public preload(count: number) {\n        for (let i = 0; i < count; i++) {\n            const obj = instantiate(this.objectPrefab);\n            obj.active = false;\n            this.pool.push(obj);\n        }\n    }\n\n    public getObject(): Node {\n        let obj: Node;\n        if (this.pool.length > 0) {\n            obj = this.pool.pop();\n        } else {\n            obj = instantiate(this.objectPrefab);\n        }\n        obj.active = true;\n        return obj;\n    }\n\n    public releaseObject(obj: Node) {\n        obj.removeFromParent();\n        obj.active = false;\n        this.pool.push(obj);\n    }\n\n    public clear() {\n        while (this.pool.length > 0) {\n            const obj = this.pool.pop();\n            obj.destroy();\n        }\n    }\n\n    getSize(): number {\n        return this.pool.length;\n    }\n}\n","import { _decorator, CCInteger, Component, log, Node, tween, Vec3 } from 'cc';\nimport { ObjectPool } from 'prefabs/objectPool/ObjectPool';\nimport { SymbolController } from 'prefabs/symbol/SymbolController';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nimport ReelsSettings from 'scripts/settings/ReelsSettings';\nimport { ReelMaskComponent } from './ReelMaskComponent';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('ReelController')\nexport class ReelController extends Component {\n\n    @property({ type: ObjectPool }) objectPool: ObjectPool = null;\n    @property({ type: Node }) symbolsContainer: Node = null;\n    @property({ type: ReelMaskComponent }) mask: ReelMaskComponent = null;\n    @property({ type: CCInteger }) visibleSymbols: number = 3;\n    @property({ type: CCInteger }) index: number = 0;\n    @property({ type: Number }) spinSpeed: number = 45;\n\n    private isSpinning: boolean = false;\n\n    public symbolHeight: number = 160;\n    public currentScale: number = 1;\n    public totalReelHeight: number = 0;\n\n    private stopCounter: number = 0;\n    private bottomLine: number = -320;\n    private bottomSymbolY: number = 0;\n\n    private symbols: Node[] = [];\n\n    private bottomSymbol: Node = null;\n\n    private toReset: boolean = false;\n\n    private stopReelData: number[];\n\n    private clearDefaultSymbols(): void {\n        this.symbolsContainer.children.forEach((node) => {\n            node.destroy();\n        })\n    }\n\n    public init(data: number[]): void {\n        this.clearDefaultSymbols();\n\n        this.visibleSymbols = data.length;\n        this.currentScale = ReelsSettings.scales[data.length];\n        this.totalReelHeight = this.calculateTotalReelHeight(data.length)\n\n        const symbolsWithPadding = [0, ...data, 0];\n        const initializedSymbols = this.createSymbols(symbolsWithPadding);\n\n        this.addInitSymbolsToContainer(initializedSymbols);\n\n        this.bottomSymbol = this.getBottomSymbol();\n        this.bottomLine = this.calculateBottomLine();\n\n        this.center(0);\n\n        this.mask.setMask(this.symbols[1].getPosition().y, this.symbols[this.symbols.length - 2].getPosition().y, this.symbolHeight * this.currentScale);\n    }\n\n    calculateTotalReelHeight(symbolCount: number) {\n        return (symbolCount + 2) * (this.symbolHeight * this.currentScale);\n    }\n\n    private addInitSymbolsToContainer(symbols: Node[]): void {\n        symbols.forEach((node: Node) => {\n            this.symbolsContainer.addChild(node);\n            this.moveSymbolToBottom(node);\n            this.symbols.push(node);\n        });\n    }\n\n    private calculateBottomLine(): number {\n        return this.bottomSymbol.getPosition().y - (this.symbolHeight * this.currentScale);\n    }\n\n    setVisibleSymbolsAmount(amount: number): void {\n        this.visibleSymbols = amount;\n        if (this.visibleSymbols > 6) this.visibleSymbols = 6;\n    }\n\n    public highlight(index: number): void {\n        this.symbols[index + 1].getComponent(SymbolController).hightlight();\n    }\n\n\n    public startSpin() {\n        this.bottomSymbol = this.getBottomSymbol();\n        this.bottomSymbolY = this.bottomSymbol.position.y;\n        this.bottomLine = this.calculateBottomLine();\n        this.isSpinning = true;\n    }\n\n    public stopSpin(data: number[], toReset: boolean) {\n        this.stopReelData = data;\n        this.stopCounter = 0;\n        this.toReset = toReset;\n        this.isSpinning = false;\n        const symbolsWithExtra = [0, ...this.stopReelData, 0];\n\n        const stopSymbols: Node[] = this.createSymbols(symbolsWithExtra);\n        this.addStopSymbolsOnTop(stopSymbols);\n        this.finishAnimation();\n    }\n\n    private createSymbols(data: number[]): Node[] {\n        const res: Node[] = [];\n\n        for (let i = 0; i < data.length; i++) {\n            res.unshift(this.createSymbol(data[i]));\n        }\n        return res;\n    }\n\n    private createSymbol(index: number): Node {\n        const symbol: Node = this.objectPool.getObject();\n        symbol.getComponent(SymbolController).changeSymbol(index);\n        symbol.getComponent(SymbolController).changeSize(this.currentScale, 0);\n        return symbol;\n    }\n\n    private addStopSymbolsOnTop(symbols: Node[]): void {\n        symbols.forEach((symbol: Node) => {\n            this.symbolsContainer.addChild(symbol);\n            this.moveSymbolOnTop(symbol);\n            this.symbols.unshift(symbol);\n        })\n    }\n\n    private finishAnimation(): void {\n        const dy = this.bottomSymbolY - this.symbols[this.visibleSymbols + 1].position.y;\n        this.symbols.forEach((symbol: Node) => {\n            tween(symbol)\n                .to(0.3, { position: new Vec3(symbol.position.x, symbol.position.y + dy, symbol.position.z) }, { easing: 'backOut' })\n                .call(() => this.onFinishSymbolTween(symbol))\n                .start();\n        });\n    }\n\n    private onFinishSymbolTween(symbol: Node): void {\n        this.stopCounter++;\n        if (this.stopCounter < this.symbols.length) return;\n        if (!this.toReset) this.removeExtraSymbols();\n        GlobalEventManager.getInstance().emit('reelStopped', this.index);\n\n    }\n\n    private removeExtraSymbols(isReset: boolean = false): void {\n        let counter = isReset\n            ? this.symbols.length - (ReelsSettings.defaultSymbolsInReel + 2)\n            : (this.symbols.length - this.stopReelData.length) - 2;\n\n        for (let i = 0; i < counter; i++) {\n            this.objectPool.releaseObject(this.symbols.pop());\n        }\n    }\n\n    private spinAnimation() {\n        for (let i = 0; i < this.symbols.length; i++) {\n            const symbol = this.symbols[i];\n            symbol.setPosition(symbol.position.x, symbol.position.y - this.spinSpeed, symbol.position.z);\n        }\n        this.bottomChecking();\n    }\n\n    private bottomChecking() {\n        if (this.bottomSymbol.position.y < this.bottomLine) {\n            this.bottomSymbol.getComponent(SymbolController).changeSymbol(Math.floor(Math.random() * 5));\n            this.moveSymbolOnTop(this.bottomSymbol);\n\n            this.symbols.unshift(this.symbols.pop());\n            this.bottomSymbol = this.getBottomSymbol();\n        }\n    }\n\n    private getBottomSymbol(): Node {\n        return this.symbols[this.symbols.length - 1];\n    }\n\n    private moveSymbolOnTop(symbol: Node): void {\n        const topSymbol = this.symbols[0];\n        symbol.setPosition(\n            topSymbol.position.x,\n            topSymbol.position.y + this.symbolHeight * this.currentScale,\n            topSymbol.position.z\n        );\n    }\n\n    update(): void {\n        if (!this.isSpinning) return;\n        this.spinAnimation();\n    }\n\n    public extend(amount: number, callback: () => void): void {\n        this.setVisibleSymbolsAmount(this.visibleSymbols + amount);\n        this.totalReelHeight = this.calculateTotalReelHeight(this.visibleSymbols);\n\n        this.center(ReelsSettings.extend_duration);\n        this.mask.animateMask(this.symbols[1].getPosition().y, this.symbols[this.symbols.length - 2].getPosition().y, this.symbolHeight * this.currentScale, ReelsSettings.extend_duration, callback);\n    };\n\n    public reset(callback: () => void): void {\n        this.setVisibleSymbolsAmount(ReelsSettings.defaultSymbolsInReel);\n        this.bottomSymbol = this.symbols[ReelsSettings.defaultSymbolsInReel];\n        this.totalReelHeight = this.calculateTotalReelHeight(this.visibleSymbols);\n\n        this.center(ReelsSettings.reset_duration);\n        this.mask.animateMask(this.symbols[1].getPosition().y, this.symbols[ReelsSettings.defaultSymbolsInReel].getPosition().y, this.symbolHeight * this.currentScale, ReelsSettings.reset_duration);\n\n        setTimeout(() => {\n            this.removeExtraSymbols(true);\n            callback();\n        }, 1000)\n    };\n\n    private moveSymbolToBottom(symbol: Node): void {\n        const lastSymbol = this.symbols[this.symbols.length - 1];\n        const position = lastSymbol?.position ?? new Vec3(0, 0, 0);\n\n        const y = this.symbols.length === 0 ? 0 : position.y - this.symbolHeight * this.currentScale;\n        symbol.setPosition(position.x, y, position.z);\n    }\n\n    private changeSize(): void {\n        let currentY = 0;\n        this.symbols.forEach((symbol: Node, index: number) => {\n            symbol.getComponent(SymbolController).changeSize(this.currentScale, ReelsSettings.extend_duration);\n\n            tween(symbol)\n                .to(ReelsSettings.extend_duration, { position: new Vec3(symbol.position.x, currentY, symbol.position.z) })\n                .start();\n\n            currentY -= this.symbolHeight * this.currentScale;\n        });\n    };\n\n    center(duration: number): void {\n        const pos = this.node.getPosition();\n        const targetY = (-450 + (this.totalReelHeight / 2)) - (this.symbolHeight * this.currentScale) / 2;\n\n        const targetPosition = new Vec3(pos.x, targetY, pos.z);\n\n        tween(this.node)\n            .to(duration, { position: targetPosition }, { easing: 'quadOut' }) // 0.5 — время анимации\n            .start();\n    }\n\n\n}\n\n","import { _decorator, Component, Node, tween } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ReelMaskComponent')\nexport class ReelMaskComponent extends Component {\n\n    @property({ type: Node }) top: Node = null;\n    @property({ type: Node }) bottom: Node = null;\n\n    public setMask(topSymbolY: number, bottomSymbolY: number, symbolHeight: number): void {\n        this.top.setPosition(0, topSymbolY + symbolHeight / 2, 0);\n        this.bottom.setPosition(0, bottomSymbolY - symbolHeight / 2, 0);\n    }\n\n    public animateMask(topSymbolY: number, bottomSymbolY: number, symbolHeight: number, duration: number, callback?: () => void): void {\n        const startValues = {\n            topY: this.top.getPosition().y,\n            bottomY: this.bottom.getPosition().y,\n            height: symbolHeight\n        };\n\n        const targetValues = {\n            topY: topSymbolY + symbolHeight / 2,\n            bottomY: bottomSymbolY - symbolHeight / 2,\n            height: symbolHeight\n        };\n\n        tween(startValues)\n            .to(duration, targetValues, {\n                easing: \"quadOut\",\n                onUpdate: () => {\n                    this.top.setPosition(0, startValues.topY, 0);\n                    this.bottom.setPosition(0, startValues.bottomY, 0);\n                }\n            })\n            .call(() => {\n                if (callback) callback();\n            })\n            .start();\n    }\n}\n\n","export default {\n    data: [\n        [0, 3, 2, 8, 1, 7, 3, 3, 6, 3, 7, 2, 1, 2, 1, 0, 1, 0, 3, 1, 2, 1, 2, 1, 0, 2, 3, 2, 1, 2, 4, 2, 4, 7, 0, 5, 1, 4,\n            0, 1, 2, 6, 2, 1, 0, 4, 3, 1, 0, 3, 7, 4, 2, 4, 3, 4, 9, 0, 4, 0, 3, 2, 3, 3, 4, 2, 1, 2, 8, 1, 0, 3, 1, 0, 0,\n            0, 0, 4, 3, 0, 4, 1, 0, 0, 3, 4, 4, 4, 1, 4, 3, 2, 1, 0, 2, 2, 1, 0, 2, 7],\n\n        [4, 0, 2, 0, 1, 3, 1, 7, 4, 1, 0, 3, 3, 0, 3, 3, 5, 4, 3, 7, 3, 0, 2, 2, 4, 8, 3, 3, 3, 1, 0, 4, 4, 1, 2, 5, 6, 0,\n            2, 4, 1, 1, 3, 1, 7, 2, 1, 4, 2, 1, 3, 0, 2, 4, 4, 1, 0, 5, 2, 1, 4, 1, 9, 4, 2, 7, 1, 0, 4, 0, 3, 0, 2, 2, 1,\n            1, 2, 1, 2, 1, 1, 4, 1, 2, 0, 0, 1, 1, 4, 2, 3, 4, 2, 0, 1, 0, 0, 0, 2, 0],\n\n        [1, 4, 1, 5, 3, 0, 4, 2, 3, 7, 1, 0, 2, 3, 1, 1, 4, 7, 3, 1, 0, 3, 1, 0, 2, 2, 7, 0, 4, 1, 2, 2, 1, 0, 0, 4, 3, 0,\n            2, 1, 4, 0, 1, 1, 0, 7, 2, 8, 0, 3, 2, 9, 1, 2, 1, 2, 2, 2, 0, 2, 3, 1, 4, 0, 1, 2, 4, 0, 0, 2, 4, 2, 4, 7, 3,\n            3, 3, 0, 1, 0, 0, 1, 3, 3, 1, 4, 3, 1, 1, 2, 6, 3, 4, 1, 4, 2, 2, 8, 3, 1],\n\n        [4, 0, 0, 0, 1, 4, 1, 2, 2, 0, 1, 0, 8, 3, 6, 0, 3, 4, 2, 7, 0, 2, 3, 4, 6, 0, 1, 8, 2, 2, 0, 3, 1, 1, 1, 7, 3, 0,\n            2, 4, 2, 6, 3, 2, 1, 3, 3, 2, 3, 0, 3, 5, 4, 2, 0, 2, 1, 9, 0, 1, 2, 4, 3, 0, 1, 0, 7, 0, 0, 3, 4, 0, 3, 0, 3,\n            0, 2, 1, 2, 2, 1, 7, 3, 1, 1, 2, 0, 7, 0, 2, 2, 4, 2, 2, 4, 2, 3, 2, 1, 2],\n\n        [1, 1, 0, 0, 0, 7, 8, 4, 2, 2, 0, 2, 4, 2, 1, 4, 2, 0, 1, 2, 4, 1, 4, 1, 0, 2, 3, 4, 1, 0, 9, 4, 3, 1, 4, 0, 4, 1,\n            3, 1, 2, 0, 2, 2, 3, 4, 4, 1, 1, 0, 3, 2, 0, 1, 7, 2, 4, 0, 3, 0, 4, 1, 7, 0, 2, 3, 1, 3, 1, 0, 1, 4, 3, 3, 3,\n            3, 1, 2, 0, 0, 7, 2, 1, 1, 3, 4, 3, 7, 2, 0, 3, 0, 4, 3, 4, 2, 0, 6, 0, 0],\n\n        [1, 1, 1, 4, 7, 1, 4, 3, 1, 1, 2, 0, 2, 0, 7, 0, 1, 3, 1, 2, 0, 5, 3, 0, 3, 7, 0, 3, 1, 2, 0, 4, 3, 1, 9, 0, 3, 1,\n            0, 1, 1, 0, 4, 1, 2, 1, 1, 1, 3, 7, 0, 3, 4, 1, 0, 1, 0, 4, 3, 0, 2, 1, 2, 4, 1, 2, 6, 0, 3, 9, 3, 0, 3, 2, 0,\n            1, 3, 0, 2, 2, 4, 1, 0, 8, 0, 3, 1, 1, 1, 2, 0, 3, 1, 3, 4, 7, 2, 3, 4, 1]\n    ]\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { ReelController } from 'prefabs/reel/ReelController';\nimport { GameEvents } from 'scripts/gameEvents/GameEvents';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nimport { InitData, SpecialSymbolData, SpinData, WaysData } from 'scripts/model/Types';\nimport ReelsSettings from 'scripts/settings/ReelsSettings';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ReelsManager')\nexport class ReelsManager extends Component {\n\n    @property({ type: Node })\n    reels: Node[] = [];\n\n    private spinningReelsCount: number = 0;\n\n    protected onLoad(): void {\n        GlobalEventManager.getInstance().once(GameEvents.INIT_RESPONSE, this.init.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.SPIN_START, this.startSpin.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.SPIN_STOP, this.stopSpin.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.ADD_LINE_START, this.onAddLine.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.RESET_LINES_START, this.onResetLines.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.SHOW_WAYS_START, this.onShowWays.bind(this));\n        GlobalEventManager.getInstance().on(GameEvents.LUCKY_MONEY_START, this.onShowLuckyMoney.bind(this));\n\n        GlobalEventManager.getInstance().on('reelStopped', this.onReelStopped, this);\n    }\n\n    private init(data: InitData): void {\n        for (let i: number = 0; i < this.reels.length; i++) {\n            const reelController = this.reels[i].getComponent(ReelController);\n            if (reelController) {\n                reelController.init(data.symbols[i]);\n            } else {\n                console.error('Reel node is not found!');\n\n            }\n        }\n\n        GlobalEventManager.getInstance().emit(GameEvents.INIT_COMPLETE);\n    }\n\n    private startSpin(): void {\n        this.spinningReelsCount = this.reels.length;\n\n        for (let i = 0; i < this.reels.length; i++) {\n            const reel = this.reels[i];\n            const reelController = reel.getComponent(ReelController);\n            if (reelController) {\n                reelController.startSpin();\n            }\n        }\n    }\n\n    private stopSpin(data: SpinData): void {\n        for (let i = 0; i < this.reels.length; i++) {\n            const reel = this.reels[i];\n            const reelController = reel.getComponent(ReelController);\n            if (reelController) {\n                setTimeout(() => {\n                    reelController.stopSpin(data.symbols[i], data.is_reset);\n                }, i * ReelsSettings.default_delay_between_reels);\n            }\n        }\n    }\n\n    private onReelStopped() {\n        this.spinningReelsCount--;\n        if (this.spinningReelsCount === 0) {\n            GlobalEventManager.getInstance().emit(GameEvents.SPIN_COMPLETE);\n        }\n    }\n\n    private onAddLine(newLinesAmount: number): void {\n        let counter: number = 0;\n\n        const callback = () => {\n            counter++;\n            if (counter === this.reels.length) {\n                GlobalEventManager.getInstance().emit(GameEvents.ADD_LINE_COMPLETE);\n            }\n        }\n        for (let i = 0; i < this.reels.length; i++) {\n            const reel = this.reels[i];\n            const reelController = reel.getComponent(ReelController);\n            reelController.extend(newLinesAmount, callback);\n        }\n    }\n\n    private onShowWays(symbols: [number, number][]): void {\n        for (let i = 0; i < symbols.length; i++) {\n            this.reels[symbols[i][0]].getComponent(ReelController).highlight(symbols[i][1]);\n        }\n\n        setTimeout(() => {\n            GlobalEventManager.getInstance().emit(GameEvents.SHOW_WAYS_COMPLETE);\n        }, 1200);\n    }\n\n    private onShowLuckyMoney(symbols: SpecialSymbolData[]): void {\n        symbols.forEach((symbol: SpecialSymbolData) => {\n            this.reels[symbol.i].getComponent(ReelController).highlight(symbol.j);\n        })\n        setTimeout(() => {\n            GlobalEventManager.getInstance().emit(GameEvents.LUCKY_MONEY_COMPLETE);\n        }, 1200);\n    }\n\n    private onResetLines(): void {\n        let counter: number = 0;\n\n        const callback = () => {\n            counter++;\n            if (counter === this.reels.length) {\n                GlobalEventManager.getInstance().emit(GameEvents.RESET_LINES_COMPLETE);\n            }\n        }\n        for (let i = 0; i < this.reels.length; i++) {\n            const reel = this.reels[i];\n            const reelController = reel.getComponent(ReelController);\n            reelController.reset(callback);\n        }\n    }\n\n    onDestroy(): void {\n        GlobalEventManager.getInstance().off('reelStopped', this.onReelStopped, this);\n    }\n\n}\n\n","export default {\n    defaultSymbolsInReel: 3,\n\n    scales: {\n        1: 1,\n        2: 0.9,\n        3: 0.8,\n        4: 0.7,\n        5: 0.6,\n        6: 0.5,\n        7: 0.4,\n        8: 0.3\n    },\n    default_delay_between_reels: 100,\n    extend_duration: 0.2,\n    reset_duration: 0.4\n}","import { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class ResetLinesState extends BaseState {\n\n  begin(data?: any) {\n    GlobalEventManager.getInstance().once(GameEvents.RESET_LINES_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.RESET_LINES_START);\n  }\n\n  end = (): void => {\n    let nextState: string = GameStates.FINAL;\n    this.stateMachine.setState(nextState);\n\n\n  }\n\n  cleanUp(): void {\n  }\n}","export default {\n\n    responses: [\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: {\n                ways: []\n            },\n            is_respin: true\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: {\n                ways: []\n            },\n            specials: {\n                symbols: [{ name: 'key', i: 4, j: 2 }],\n            },\n            is_respin: true\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            is_reset: true\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: {\n                ways: []\n            },\n            freespins: {\n                total: 5,\n                left: 5,\n                total_won: 0\n            },\n            specials: {\n                symbols: [\n                    { name: 'key', i: 0, j: 1 },\n                    { name: 'key', i: 1, j: 1 },\n                    { name: 'key', i: 2, j: 1 },\n                    { name: 'freespins', i: 0, j: 0 },\n                    { name: 'freespins', i: 3, j: 1 },\n                    { name: 'freespins', i: 5, j: 0 }\n                ],\n            },\n            is_respin: true\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: {\n                ways: []\n            },\n            freespins: {\n                total: 5,\n                left: 5,\n                total_won: 0\n            },\n            is_respin: true\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 5,\n                total_won: 0\n            }\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 4,\n                total_won: 0\n            }\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 3,\n                total_won: 0\n            }\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 2,\n                total_won: 0\n            }\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 1,\n                total_won: 0\n            }\n        },\n        {\n            symbols: [\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3],\n                [0, 1, 3]\n            ],\n            winnings: null,\n            freespins: {\n                total: 5,\n                left: 0,\n                total_won: 1000\n            },\n            is_reset: true\n        }\n    ]\n}","import { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { WaysData } from \"scripts/model/Types\";\nimport { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\nimport { getUniquePositions } from \"scripts/ult/Utils\";\n\nexport class ShowWaysState extends BaseState {\n\n  begin(data: WaysData) {\n    GlobalEventManager.getInstance().once(GameEvents.SHOW_WAYS_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.SHOW_WAYS_START, getUniquePositions(data));\n  }\n\n  end = (): void => {\n    let nextState: string = GameStates.FINAL;\n    this.stateMachine.setState(nextState);\n  }\n\n  cleanUp(): void {\n  }\n}","import { _decorator, Component } from 'cc';\nimport { GameModel } from 'scripts/model/GameModel';\nimport { NetworkManager } from './NetworkManager';\nimport { ReelsManager } from './ReelsManager';\nimport { UIManager } from './UIManager';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SlotGameManager')\nexport class SlotGameManager extends Component {\n\n    @property({ type: GameModel })\n    GameModel: GameModel = null;\n\n    @property({ type: ReelsManager })\n    reelsManager: ReelsManager = null;\n\n    @property({ type: UIManager })\n    uiManager: UIManager = null;\n\n    @property({ type: NetworkManager })\n    networkManager: NetworkManager = null;\n\n    private balance: number = 1000;\n    private betAmount: number = 10;\n}\n","import { SymbolType } from \"scripts/model/Types\";\n\nexport const NUM_REELS = 6; // Количество барабановs\nexport const REEL_LENGTH = 100; // Длина каждого барабана\n\n// Вероятности выпадения символов (low-pay встречаются чаще, high-pay реже)\nexport const symbolWeights: Record<number, number> = {\n    0: 20, 1: 18, 2: 16, 3: 14, 4: 12,\n    5: 2, 6: 2, 7: 3, 8: 2, 9: 2\n};\n\n// Функция случайного выбора символа по весам\nexport function getRandomSymbol(): number {\n    const symbols = Object.keys(symbolWeights).map(Number) as number[]; // Преобразуем строки в числа\n    const weights = Object.values(symbolWeights);\n    const totalWeight = weights.reduce((sum, w) => sum + w, 0);\n    let rand = Math.random() * totalWeight;\n\n    for (let i = 0; i < symbols.length; i++) {\n        if (rand < weights[i]) {\n            return symbols[i]; // Теперь тип `SymbolType` корректный\n        }\n        rand -= weights[i];\n    }\n    return symbols[symbols.length - 1]; // fallback (не должно срабатывать)\n}\n\n// Функция генерации ленты для одного барабана\nexport function generateReel(): number[] {\n    const reel: number[] = [];\n    for (let i = 0; i < REEL_LENGTH; i++) {\n        reel.push(getRandomSymbol());\n    }\n    return reel;\n}\n\nexport function getSubsequence(sequence: SymbolType[], length: number): SymbolType[] {\n    let start = Math.floor(Math.random() * sequence.length);\n    let subsequence = [];\n    for (let i = 0; i < length; i++) {\n        subsequence.push(sequence[(start + i) % sequence.length]);\n    }\n    return subsequence;\n}\n","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport { SpinData } from \"scripts/model/Types\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class SpinState extends BaseState {\n\n  begin(data?: any) {\n    GlobalEventManager.getInstance().once(GameEvents.SPIN_RESPONSE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.SPIN_REQUEST);\n    GlobalEventManager.getInstance().emit(GameEvents.SPIN_START);\n  }\n\n  end = (data: SpinData): void => {\n    this.model.storeSpinData(data);\n    this.stateMachine.setState(GameStates.STOP);\n  }\n\n  cleanUp(): void {\n  }\n}","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport { FreespinsData, SpinData } from \"scripts/model/Types\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class StartFreespinsState extends BaseState {\n\n  begin(data?: FreespinsData) {\n    GlobalEventManager.getInstance().once(GameEvents.FREESPINS_SHOW_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.START_FREESPINS_SHOW, data);\n  }\n\n  end = (data: SpinData): void => {\n    this.stateMachine.setState(GameStates.FINAL);\n  }\n\n  cleanUp(): void {\n  }\n}","import { _decorator, Button } from 'cc';\nimport { WindowComponent } from 'prefabs/modal/scripts/WindowComponent';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nimport { GameEvents } from 'scripts/gameEvents/GameEvents';\nimport { FreespinsData } from 'scripts/model/Types';\nconst { ccclass, property } = _decorator;\n\n@ccclass('StartFreespinsWindow')\nexport class StartFreespinsWindow extends WindowComponent {\n\n    @property({ type: Button }) startBbtn: Button = null;\n\n\n    protected onLoad(): void {\n        GlobalEventManager.getInstance().on(GameEvents.START_FREESPINS_SHOW, this.onShow.bind(this));\n        this.hide();\n    }\n\n    private onShow(data: FreespinsData): void {\n        this.show();\n        this.headerLabel.string = 'Start Free Spins';\n        this.bodyText.string = String(data.left);\n    }\n\n    public onStartBtnClick(): void {\n        GlobalEventManager.getInstance().emit(GameEvents.FREESPINS_SHOW_COMPLETE);\n        this.hide();\n    }\n\n    private show(): void {\n        this.node.active = true;\n    }\n\n    private hide(): void {\n        this.node.active = false;\n    }\n\n}\n\n","import { IStateMachine } from \"./IStateMachine\"\nimport { BaseState } from \"./BaseState\"\nimport EventManager from \"./events/EventManager\"\nimport { StateMachineEvents } from \"./StateMachineEvents\"\nimport { mylog } from \"scripts/ult/Utils\"\n\nexport class StateMachine implements IStateMachine {\n  model: any\n  currentState: BaseState\n  idsMap: Map<string, string>\n  statesMap: Map<string, BaseState>\n  currentStateName: string\n  statesEnum: any;\n\n  constructor(model: any, stateEnum: object) {\n    this.model = model\n    this.currentState = null as any\n    this.idsMap = new Map<string, string>()\n    this.statesMap = new Map<string, BaseState>()\n    this.currentStateName = \"\"\n    this.init(stateEnum)\n  }\n\n  public init(stateEnum: any): void {\n    this.statesEnum = stateEnum\n  }\n\n  public addState(StatesEnum: any, id: string): void {\n    let stateId: string = this.getStateId(id) as string\n    if (this.idsMap.has(stateId)) {\n      throw new Error(\"State already defined: \" + stateId)\n    }\n    this.idsMap.set(id, stateId)\n    this.statesMap.set(id, new StatesEnum(this, id, this.model))\n  }\n\n  public getStateId(id: string): string {\n    for (let name in this.statesEnum) {\n      if (id === this.statesEnum[name]) {\n        return name\n      }\n    }\n  }\n\n  public setState(id: string, data?: any): void {\n    if (this.currentState) {\n      this.currentState.cleanUp()\n    }\n\n    this.currentState = this.statesMap.get(id) as BaseState\n    this.currentStateName = this.idsMap.get(id) as string\n    this.stateChanged(this.idsMap.get(id) as string, this.model)\n    this.currentState.begin(data)\n  }\n\n  stateChanged(id: string, model: any) {\n    mylog(`STATE CHANGED::${id}`);\n\n    EventManager.dispatch(StateMachineEvents.STATE_CHANGED, id);\n    model.currentState = this.currentStateName\n  }\n\n}\n","export enum StateMachineEvents{\n  STATE_CHANGED = \"STATE_CHANGED\"\n};\n","export enum GameStates {\n  INIT = 'INIT',\n  IDLE = 'IDLE',\n  SPIN = 'SPIN',\n  STOP = 'STOP',\n  SHOW_WAYS = 'SHOW_WAYS',\n  LUCKY_MONEY = 'LUCKY_MONEY',\n  ADD_LINE = 'ADD_LINE',\n  RESET_LINES = 'RESET_LINES',\n  START_FREESPINS = 'START_FREESPINS',\n  STOP_FREESPINS = 'STOP_FREESPINS',\n  FINAL = 'FINAL',\n}\n\nexport const GameStatesPriority = {\n  LUCKY_MONEY: 1,\n  SHOW_WAYS: 2,\n  ADD_LINE: 3,\n  RESET_LINES: 3,\n  START_FREESPINS: 4,\n  STOP_FREESPINS: 4,\n  START_BONUS: 4,\n  STOP_BONUS: 4,\n}","import { BaseState } from \"scripts/state-machine/BaseState\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport { FreespinsData, SpinData } from \"scripts/model/Types\";\nimport { GameStates } from \"../StatesEnum\";\n\nexport class StopFreespinsState extends BaseState {\n\n  begin(data?: FreespinsData) {\n    GlobalEventManager.getInstance().once(GameEvents.STOP_FREESPINS_SHOW_COMPLETE, this.end);\n    GlobalEventManager.getInstance().emit(GameEvents.STOP_FREESPINS_SHOW, data);\n  }\n\n  end = (data: SpinData): void => {\n    let nextState: string = GameStates.FINAL;\n    this.stateMachine.setState(nextState);\n  }\n\n  cleanUp(): void {\n  }\n}","import { _decorator, Button } from 'cc';\nimport { WindowComponent } from 'prefabs/modal/scripts/WindowComponent';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nimport { GameEvents } from 'scripts/gameEvents/GameEvents';\nimport { FreespinsData } from 'scripts/model/Types';\nconst { ccclass, property } = _decorator;\n\n@ccclass('StopFreespinsWindow')\nexport class StopFreespinsWindow extends WindowComponent {\n\n    @property({ type: Button }) startBbtn: Button = null;\n\n\n    protected onLoad(): void {\n        GlobalEventManager.getInstance().on(GameEvents.STOP_FREESPINS_SHOW, this.onShow.bind(this));\n        this.hide();\n    }\n\n    private onShow(data: FreespinsData): void {\n        this.show();\n        this.headerLabel.string = 'Stop Free Spins';\n        this.bodyText.string = String(data.left);\n    }\n\n    public onStartBtnClick(): void {\n        GlobalEventManager.getInstance().emit(GameEvents.STOP_FREESPINS_SHOW_COMPLETE);\n        this.hide();\n    }\n\n    private show(): void {\n        this.node.active = true;\n    }\n\n    private hide(): void {\n        this.node.active = false;\n    }\n\n}\n\n","import { GameEvents } from \"scripts/gameEvents/GameEvents\";\nimport GlobalEventManager from \"scripts/GlobalEventManager\";\nimport { BaseState } from \"scripts/state-machine/BaseState\";\nimport { GameStates } from \"../StatesEnum\";\nimport { SpecialSymbolType } from \"scripts/model/Types\";\nimport { checkForSpecialSymbols } from \"scripts/ult/Utils\";\n\nexport class StopState extends BaseState {\n\n  begin(data?: any) {\n    GlobalEventManager.getInstance().once(GameEvents.SPIN_COMPLETE, this.end);\n\n    setTimeout(() => {\n      GlobalEventManager.getInstance().emit(GameEvents.SPIN_STOP, this.model.spinData);\n    }, 1000);\n  }\n\n  end = (): void => {\n    let nextState: string = GameStates.FINAL;\n    this.stateMachine.setState(nextState);\n  }\n\n  cleanUp(): void {\n  }\n}","import { _decorator, Component, Node, tween, Vec3 } from 'cc';\nimport { NodeSwitcher } from 'prefabs/nodeSwitcher/NodeSwitcher';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SymbolController')\nexport class SymbolController extends Component {\n\n    @property({ type: Node })\n    back: Node = null;\n\n    @property({ type: NodeSwitcher })\n    symbol: NodeSwitcher = null;\n\n    public changeSymbol(index: number): void {\n        this.symbol.currentNodeIndex = index;\n    }\n\n    changeSize(scale: number = 0, time: number): void {\n        if (!time || time === 0) {\n            this.back.scale = new Vec3(this.back.scale.x, scale, this.back.scale.z);\n            this.symbol.node.scale = new Vec3(scale, scale, 1);\n        } else {\n            tween(this.back)\n                .to(time, { scale: new Vec3(this.back.scale.x, scale, this.back.scale.z) })\n                .start();\n\n            tween(this.symbol.node)\n                .to(time, { scale: new Vec3(scale, scale, 1) })\n                .start();\n        }\n    }\n\n    public hightlight(): void {\n        tween(this.node)\n            .to(0.1, { scale: new Vec3(1.4, 1.4, 1.4) })\n            .to(0.6, { scale: new Vec3(1, 1, 1) })\n            .union()\n            .start();\n    }\n}","export default {\n    symbols: {\n        0: 0,\n        1: 1,\n        2: 2,\n        3: 3,\n        4: 4,\n        5: 'bonus',\n        6: 'money',\n        7: 'freespins',\n        8: 'key',\n        9: 'wild'\n    },\n    scales: {\n        1: 1,\n        2: 0.9,\n        3: 0.8,\n        4: 0.7,\n        5: 0.6,\n        6: 0.5,\n        7: 0.4,\n        8: 0.3\n    },\n    default_delay_between_reels: 200,\n\n}\n","\nexport type SymbolType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport type InitData = {\n    symbols: number[][]\n}\n\nexport type SpinData = {\n    symbols: number[][],\n    ways?: WaysData,\n    specials?: SpecialSymbolData[],\n    freespins?: FreespinsData,\n    is_respin?: boolean,\n    is_reset?: boolean,\n    add_lines?: number\n}\n\nexport type SpecialSymbolData = {\n    i: number,\n    j: number,\n    type: SpecialSymbolType\n}\n\nexport type WaysData = {\n    ways: Way[],\n}\n\nexport type Way = {\n    symbol: number,\n    path: number[]\n}\n\nexport type FreespinsData = {\n    total: number,\n    left: number,\n    total_won: number\n}\n\nexport enum SpecialSymbolType {\n    key = 'key',\n    bonus = 'bonus',\n    freespins = 'freespins',\n    money = 'money',\n    wild = 'wild',\n}","import { _decorator, Button, Component, Label } from 'cc';\nimport GlobalEventManager from 'scripts/GlobalEventManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIManager')\nexport class UIManager extends Component {\n    @property({ type: Label })\n    balanceLabel: Label = null;\n\n    @property({ type: Label })\n    betLabel: Label = null;\n\n    @property({ type: Label })\n    winMessageLabel: Label = null;\n\n    @property({ type: Button })\n    spinButton: Button = null;\n\n    @property({ type: Button })\n    stopButton: Button = null;\n\n    @property({ type: Button })\n    increaseBetButton: Button = null;\n\n    @property({ type: Button })\n    decreaseBetButton: Button = null;\n\n    private currentBet: number = 10;\n    private maxBet: number = 100;\n    private minBet: number = 10;\n\n    onLoad() {\n        this.spinButton.node.on('click', this.onSpinButtonClicked, this);\n        this.stopButton.node.on('click', this.onStopButtonClicked, this);\n        this.increaseBetButton.node.on('click', this.onIncreaseBetClicked, this);\n        this.decreaseBetButton.node.on('click', this.onDecreaseBetClicked, this);\n\n        this.updateBetDisplay(this.currentBet);\n        this.winMessageLabel.node.active = false;\n    }\n\n    updateBalanceDisplay(balance: number) {\n        this.balanceLabel.string = `Balance: $${balance}`;\n    }\n\n    updateBetDisplay(bet: number) {\n        this.betLabel.string = `Bet: $${bet}`;\n    }\n\n    showWinMessage(amount: number) {\n        this.winMessageLabel.string = `You won $${amount}!`;\n        this.winMessageLabel.node.active = true;\n\n        this.scheduleOnce(() => {\n            this.winMessageLabel.node.active = false;\n        }, 2);\n    }\n\n    onSpinButtonClicked() {\n        GlobalEventManager.getInstance().emit('spinPressed');\n    }\n\n    onStopButtonClicked() {\n        GlobalEventManager.getInstance().emit('stopPressed');\n    }\n\n    onIncreaseBetClicked() {\n        if (this.currentBet < this.maxBet) {\n            this.currentBet += 10;\n            this.updateBetDisplay(this.currentBet);\n        }\n    }\n\n    onDecreaseBetClicked() {\n        if (this.currentBet > this.minBet) {\n            this.currentBet -= 10;\n            this.updateBetDisplay(this.currentBet);\n        }\n    }\n}\n","import { SpinData, SpecialSymbolData, SpecialSymbolType, WaysData } from \"scripts/model/Types\";\nimport GameSettings from \"scripts/settings/GameSettings\";\n\nexport function checkForSpecialSymbols(spinData: SpinData, symbolType: SpecialSymbolType): SpecialSymbolData[] {\n    return spinData.specials?.filter(symbol => symbol.type === symbolType);\n}\n\nexport function getUniquePositions(waysData: WaysData): [number, number][] {\n    const uniquePositions = new Set<string>();\n    const result: [number, number][] = [];\n\n    waysData.ways.forEach(way => {\n        way.path.forEach((pos, index) => {\n            const key = `${index},${pos}`; // Индекс - это \"x\", pos - это \"y\"\n\n            if (!uniquePositions.has(key)) {\n                uniquePositions.add(key);\n                result.push([index, pos]); // Добавляем уникальную позицию\n            }\n        });\n    });\n\n    return result;\n}\n\nexport function mylog(...data: any[]): void {\n    if (GameSettings.is_debug) console.log(data);\n}","import SymbolsSettings from \"scripts/settings/SymbolsSettings\";\n\nexport function generateSequence() {\n    let sequence = [];\n    for (let i = 0; i < 100; i++) {\n        sequence.push(Math.floor(Math.random() * 9));\n    }\n    return sequence;\n}\n\nexport function getSubsequence(sequence: number[], length: number, manualStart: number = -1): number[] {\n    let start: number = manualStart === -1 ? Math.floor(Math.random() * sequence.length) : manualStart;\n    let subsequence: number[] = [];\n    for (let i = 0; i < length; i++) {\n        subsequence.push(sequence[(start + i) % sequence.length]);\n    }\n    return subsequence;\n}\n\nexport function findSymbolPositions(reels: number[][], targetSymbol: number) {\n    const positions: { type: string, i: number, j: number }[] = [];\n\n    for (let i = 0; i < reels.length; i++) {\n        for (let j = 0; j < reels[i].length; j++) {\n            if (reels[i][j] === targetSymbol) {\n                positions.push({ type: SymbolsSettings.symbols[targetSymbol], i, j });\n            }\n        }\n    }\n\n    return positions;\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('WindowComponent')\nexport class WindowComponent extends Component {\n\n    @property({ type: Label }) headerLabel: Label = null;\n    @property({ type: Label }) bodyText: Label = null;\n\n\n    start() {\n\n    }\n\n}\n\n"]}